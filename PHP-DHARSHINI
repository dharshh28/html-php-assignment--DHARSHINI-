
<? php
$capital=67;
print(‚ÄúVariable capital is $capital‚Äù);
print(‚ÄúVariable CaPiTaL is $CaPiTaL‚Äù);
?>



OUTPUT
ERROR!
/tmp/Am00wiBXdc/main.c:1:1: error: expected identifier or '(' before '<' token
    1 | <? php
      | ^
/tmp/Am00wiBXdc/main.c:3:7: error: expected declaration specifiers or '...' before string constant
    3 | print("Variable capital is $capital");
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/tmp/Am00wiBXdc/main.c:4:7: error: stray '\342' in program
    4 | print(<U+201C>Variable CaPiTaL is $CaPiTaL<U+201D>);
      |       ^~~~~~~~
ERROR!
/tmp/Am00wiBXdc/main.c:4:8: error: unknown type name 'Variable'
    4 | print(‚ÄúVariable CaPiTaL is $CaPiTaL‚Äù);
      |        ^~~~~~~~
/tmp/Am00wiBXdc/main.c:4:36: error: stray '\342' in program
    4 | print(<U+201C>Variable CaPiTaL is $CaPiTaL<U+201D>);
      |                                           ^~~~~~~~
/tmp/Am00wiBXdc/main.c:5:1: error: expected identifier or '(' before '?' token
    5 | ?>
      | ^


=== Code Exited With Errors ===



 Problems in the Code:
<? php has an extra space. It should be <?php.

‚Äú and ‚Äù are smart quotes (curly quotes). PHP requires straight quotes: " or '.

$CaPiTaL is undefined ‚Äî PHP is case-sensitive for variable names.




CORRECT CODE

<?php
$capital = 67;
print("Variable capital is $capital\n");
print("Variable CaPiTaL is $CaPiTaL\n");
?>


OUTPUT
Variable capital is 67





2.Create a PHP program to display the division table using for-loop.
1 2 3
1 1 0.5 0.33
2 2 1 0.66
3 3 1.5 1

<html>
<head>
    <title>Division Table</title>
    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
            padding: 8px;
            text-align: center;
        }
    </style>
</head>
<body>

<?php
echo "<table>";
echo "<tr><td></td>"; // Top-left empty cell

// Top header row
for ($i = 1; $i <= 3; $i++) {
    echo "<td>$i</td>";
}
echo "</tr>";

// Table rows
for ($row = 1; $row <= 3; $row++) {
    echo "<tr>";
    echo "<td>$row</td>"; // First column (row header)

    for ($col = 1; $col <= 3; $col++) {
        $result = $row / $col;
        echo "<td>" . round($result, 2) . "</td>";
    }

    echo "</tr>";
}
echo "</table>";
?>

</body>
</html>


OUTPUT
 | 1   2    3
  ---------------
  1  | 1  0.5  0.33
  2  | 2   1   0.66
  3  | 3  1.5   1


3. Imagine you are building a personal portfolio website. Design a web page layout that
includes a header, a navigation menu, a main content area for displaying your projects
and a footer. Explain how you would structure the HTML code and apply CSS styles to
achieve the desired layout and visual design.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Portfolio</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <header>
    <h1>John Doe</h1>
    <p>Web Developer | Problem Solver | Tech Enthusiast</p>
  </header>

  <nav>
    <ul>
      <li><a href="#about">About</a></li>
      <li><a href="#projects">Projects</a></li>
      <li><a href="#contact">Contact</a></li>
    </ul>
  </nav>

  <main>
    <section id="projects">
      <h2>My Projects</h2>
      <div class="project">
        <h3>Project One</h3>
        <p>Description of project one.</p>
      </div>
      <div class="project">
        <h3>Project Two</h3>
        <p>Description of project two.</p>
      </div>
    </section>
  </main>

  <footer>
    <p>&copy; 2025 John Doe. All rights reserved.</p>
  </footer>
</body>
</html>


4.  Predict the output of the following snippet:
$animal = ‚Äúantelope‚Äù; $animal_heads = 1; $animal_legs = 4;
echo‚ÄúThe $animal has $animal_heads head(s).‚Äù;
echo‚ÄúThe $animal has $animal_legs leg(s).‚Äù;

Corrected Version:

$animal = "antelope"; 
$animal_heads = 1; 
$animal_legs = 4;

echo "The $animal has $animal_heads head(s).";
echo "The $animal has $animal_legs leg(s).";

output:
The antelope has 1 head(s).The antelope has 4 leg(s).


5. You are building a website where users can calculate the total cost of their purchases.
Write a PHP program that takes the price and quantity of three items from the user and
calculates the subtotal, tax (10% of the subtotal),and the total cost (subtotal + tax).
Display the results to the user.


program:

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Cost Calculator</title>
</head>
<body>
    <h2>Purchase Cost Calculator</h2>

    <form method="post">
        <h3>Item 1</h3>
        Price: <input type="number" step="0.01" name="price1" required>
        Quantity: <input type="number" name="qty1" required><br><br>

        <h3>Item 2</h3>
        Price: <input type="number" step="0.01" name="price2" required>
        Quantity: <input type="number" name="qty2" required><br><br>

        <h3>Item 3</h3>
        Price: <input type="number" step="0.01" name="price3" required>
        Quantity: <input type="number" name="qty3" required><br><br>

        <input type="submit" name="calculate" value="Calculate">
    </form>

    <?php
    if (isset($_POST['calculate'])) {
        // Get input values
        $price1 = $_POST['price1'];
        $qty1   = $_POST['qty1'];

        $price2 = $_POST['price2'];
        $qty2   = $_POST['qty2'];

        $price3 = $_POST['price3'];
        $qty3   = $_POST['qty3'];

        // Calculate subtotal
        $subtotal = ($price1 * $qty1) + ($price2 * $qty2) + ($price3 * $qty3);

        // Calculate tax (10% of subtotal)
        $tax = $subtotal * 0.10;

        // Calculate total
        $total = $subtotal + $tax;

        // Display results
        echo "<h3>Bill Summary:</h3>";
        echo "Subtotal: ‚Çπ" . number_format($subtotal, 2) . "<br>";
        echo "Tax (10%): ‚Çπ" . number_format($tax, 2) . "<br>";
        echo "<strong>Total Cost: ‚Çπ" . number_format($total, 2) . "</strong>";
    }
    ?>
</body>
</html>


6. Interpret the method to pass the information between pages in PHP with an example.

program:

<?php
session_start(); // Needed for SESSION method

// Handle form submissions or links
$result = "";

if ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['method']) && $_GET['method'] === 'get') {
    $name = $_GET['name'] ?? '';
    $age  = $_GET['age'] ?? '';
    $result = "<b>GET Method:</b> Hello, $name. You are $age years old.";
}

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['method']) && $_POST['method'] === 'post') {
    $name = $_POST['name'] ?? '';
    $age  = $_POST['age'] ?? '';
    $result = "<b>POST Method:</b> Hello, $name. You are $age years old.";
}

if (isset($_GET['method']) && $_GET['method'] === 'session') {
    $_SESSION['username'] = "Dharshini"; // Store in session
    $result = "<b>SESSION Method:</b> Welcome, " . $_SESSION['username'] . "!";
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Passing Data Between Pages in PHP</title>
</head>
<body>
    <h2>Passing Information Between Pages</h2>

    <!-- GET Method Form -->
    <form method="get">
        <input type="hidden" name="method" value="get">
        <h3>GET Method</h3>
        Name: <input type="text" name="name"><br>
        Age: <input type="number" name="age"><br>
        <input type="submit" value="Send via GET">
    </form>

    <hr>

    <!-- POST Method Form -->
    <form method="post">
        <input type="hidden" name="method" value="post">
        <h3>POST Method</h3>
        Name: <input type="text" name="name"><br>
        Age: <input type="number" name="age"><br>
        <input type="submit" value="Send via POST">
    </form>

    <hr>

    <!-- SESSION Method Link -->
    <h3>SESSION Method</h3>
    <a href="?method=session">Go to Session Example</a>

    <hr>
    <!-- Display Result -->
    <?php
    if (!empty($result)) {
        echo "<h3>Result:</h3>";
        echo $result;
    }
    ?>
</body>
</html>



7. Create a form which takes the name of the user as input and prints a greeting in the format
given below and if the user submits the form with the name field blank, it prints an
appropriate error message.

Hello, Welcome to Everyone!
Have a nice day!!

program:

<!DOCTYPE html>
<html>
<head>
    <title>Greeting Form</title>
</head>
<body>
    <h2>User Greeting Form</h2>

    <form method="post">
        Enter your name: 
        <input type="text" name="username">
        <input type="submit" name="submit" value="Greet Me">
    </form>

    <hr>

    <?php
    if (isset($_POST['submit'])) {
        $name = trim($_POST['username']); // Remove extra spaces

        if ($name === "") {
            echo "<p style='color:red;'>Error: Please enter your name.</p>";
        } else {
            echo "<h3>Hello, $name! Welcome to Everyone!</h3>";
            echo "<p>Have a nice day!!</p>";
        }
    }
    ?>
</body>
</html>



8.A customer visits a shop to buy a soft drink; he has two options:
Drink A cost is Rs.25 and the size of the bottle is 11.
Drink B cost is Rs.23 and its size of the bottle is 9.
Which drink should he choose to save money? Solve this problem using function deal ( ).

program:  

<!DOCTYPE html>
<html>
<head>
    <title>Soft Drink Deal Calculator</title>
</head>
<body>
    <h2>Soft Drink Deal Calculator</h2>

    <?php
    function deal($costA, $sizeA, $costB, $sizeB) {
        // Calculate cost per litre
        $perLitreA = $costA / $sizeA;
        $perLitreB = $costB / $sizeB;

        echo "Cost per litre of Drink A: Rs. " . number_format($perLitreA, 2) . "<br>";
        echo "Cost per litre of Drink B: Rs. " . number_format($perLitreB, 2) . "<br><br>";

        // Compare and decide
        if ($perLitreA < $perLitreB) {
            echo "<strong>Drink A is a better deal! ‚úÖ</strong>";
        } elseif ($perLitreB < $perLitreA) {
            echo "<strong>Drink B is a better deal! ‚úÖ</strong>";
        } else {
            echo "<strong>Both drinks cost the same per litre. ü§ù</strong>";
        }
    }

    // Given data
    $costA = 25;
    $sizeA = 11;

    $costB = 23;
    $sizeB = 9;

    // Call the function
    deal($costA, $sizeA, $costB, $sizeB);
    ?>

</body>
</html>

9. Predict the output of the following snippet:
$this = ‚Äúthis‚Äù; $that = ‚Äúthat‚Äù; $the_other = 2.2000000000;
print(‚Äú$this,$not_set,$that+$the_other‚Äù);


<?php
// Enable error reporting to show notices
error_reporting(E_ALL);
ini_set('display_errors', 1);

$this = "this";
$that = "that";
$the_other = 2.2000000000;

print("$this,$not_set,$that+$the_other");
?>


10. Develop a program to check student grades based on marks using a loop.

program:


<!DOCTYPE html>
<html>
<head>
    <title>Student Grades Checker</title>
</head>
<body>
    <h2>Enter Marks for Students</h2>
    <form method="post">
        <label>Number of Students: </label>
        <input type="number" name="num_students" min="1" value="<?php echo isset($_POST['num_students']) ? $_POST['num_students'] : 1; ?>" required>
        <input type="submit" name="set" value="Set">
    </form>

    <?php
    function getGrade($marks) {
        if ($marks >= 90) return 'A';
        elseif ($marks >= 80) return 'B';
        elseif ($marks >= 70) return 'C';
        elseif ($marks >= 60) return 'D';
        else return 'F';
    }

    if (isset($_POST['set']) && !empty($_POST['num_students'])) {
        $num = intval($_POST['num_students']);
        if ($num > 0) {
            echo "<h3>Enter marks for $num student(s):</h3>";
            echo '<form method="post">';
            // Keep the number of students in a hidden input for later processing
            echo '<input type="hidden" name="num_students" value="'.$num.'">';
            echo '<table border="1" cellpadding="5" cellspacing="0">';
            echo '<tr><th>Student #</th><th>Marks (0-100)</th></tr>';

            for ($i = 1; $i <= $num; $i++) {
                $value = isset($_POST["marks_$i"]) ? $_POST["marks_$i"] : '';
                echo "<tr>";
                echo "<td>Student $i</td>";
                echo "<td><input type='number' name='marks_$i' min='0' max='100' value='$value' required></td>";
                echo "</tr>";
            }
            echo "</table><br>";
            echo '<input type="submit" name="check_grades" value="Check Grades">';
            echo '</form>';
        }
    }

    if (isset($_POST['check_grades']) && !empty($_POST['num_students'])) {
        $num = intval($_POST['num_students']);
        echo "<h3>Grades:</h3>";
        echo '<table border="1" cellpadding="5" cellspacing="0">';
        echo '<tr><th>Student #</th><th>Marks</th><th>Grade</th></tr>';

        for ($i = 1; $i <= $num; $i++) {
            $marks = isset($_POST["marks_$i"]) ? intval($_POST["marks_$i"]) : 0;
            $grade = getGrade($marks);
            echo "<tr>";
            echo "<td>Student $i</td>";
            echo "<td>$marks</td>";
            echo "<td>$grade</td>";
            echo "</tr>";
        }
        echo '</table>';
    }
    ?>
</body>
</html>


11.Develop a PHP program to show days of the week using switch cases.


<!DOCTYPE html>
<html>
<head>
    <title>Days of the Week</title>
</head>
<body>
    <h2>Show Day of the Week</h2>

    <form method="post">
        Enter a number (1-7): 
        <input type="number" name="day" min="1" max="7" required>
        <input type="submit" value="Show Day">
    </form>

    <?php
    if (isset($_POST['day'])) {
        $day = intval($_POST['day']);

        switch ($day) {
            case 1:
                $dayName = "Sunday";
                break;
            case 2:
                $dayName = "Monday";
                break;
            case 3:
                $dayName = "Tuesday";
                break;
            case 4:
                $dayName = "Wednesday";
                break;
            case 5:
                $dayName = "Thursday";
                break;
            case 6:
                $dayName = "Friday";
                break;
            case 7:
                $dayName = "Saturday";
                break;
            default:
                $dayName = "Invalid input! Please enter a number between 1 and 7.";
        }

        echo "<h3>Day: $dayName</h3>";
    }
    ?>
</body>
</html>

12. Write a program to check student grade based on marks:
Conditions:
If marks are 75% or more, the grade will be First Class.
If marks between 60% to 74%, grade will be second class.
If marks between 40% to 59%, grade will be third class.
If marks are less than 40%, students will be Fail.

program:

<!DOCTYPE html>
<html>
<head>
    <title>Student Grade Checker</title>
</head>
<body>
    <h2>Check Student Grade</h2>

    <form method="post">
        Enter marks (0-100): 
        <input type="number" name="marks" min="0" max="100" required>
        <input type="submit" value="Check Grade">
    </form>

    <?php
    if (isset($_POST['marks'])) {
        $marks = floatval($_POST['marks']);
        $grade = "";

        if ($marks >= 75) {
            $grade = "First Class";
        } elseif ($marks >= 60) {
            $grade = "Second Class";
        } elseif ($marks >= 40) {
            $grade = "Third Class";
        } else {
            $grade = "Fail";
        }

        echo "<h3>Your Grade: $grade</h3>";
    }
    ?>
</body>
</html>



13.13. Consider the following snippet, comment your views.
$sub = substr(12345, 2, 2);
echo ‚Äúsub is $sub‚Äù;

program

<?php
// Original snippet with implicit conversion
$sub = substr(12345, 2, 2);
echo "sub is $sub\n";

// Safer version: explicit string conversion
$num = 12345;
$strNum = (string)$num;           // Convert number to string explicitly
$sub2 = substr($strNum, 2, 2);
echo "sub2 is $sub2\n";
?>


output:
 sub is 34
 sub2 is 34

14. Show a form with input fields for a user's name, email, and message. When the form is
submitted, display a confirmation message on the same page with the user's name and
email.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Form with Confirmation</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 50px;
    }
    form {
      max-width: 400px;
      margin-bottom: 20px;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input, textarea {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    button {
      margin-top: 15px;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      background-color: teal;
      color: white;
      font-size: 16px;
      cursor: pointer;
    }
    #confirmation {
      display: none;
      padding: 15px;
      background-color: #e6ffe6;
      border: 1px solid #5cb85c;
      border-radius: 5px;
    }
  </style>
</head>
<body>

  <h2>Contact Form</h2>
  <form id="userForm">
    <label for="name">Name:</label>
    <input type="text" id="name" required>

    <label for="email">Email:</label>
    <input type="email" id="email" required>

    <label for="message">Message:</label>
    <textarea id="message" rows="4" required></textarea>

    <button type="submit">Submit</button>
  </form>

  <div id="confirmation"></div>

  <script>
    const form = document.getElementById("userForm");
    const confirmation = document.getElementById("confirmation");

    form.addEventListener("submit", function(event) {
      event.preventDefault(); // stop page refresh

      const name = document.getElementById("name").value;
      const email = document.getElementById("email").value;

      confirmation.style.display = "block";
      confirmation.innerHTML = `<h3>Thank you, ${name}!</h3>
                                <p>We have received your message. A confirmation has been sent to <strong>${email}</strong>.</p>`;

      form.reset(); // clear form
    });
  </script>

</body>
</html>


15. Create a PHP program to compute the sum of the digits of a number.

<?php
// Function to compute sum of digits
function sumOfDigits($num) {
    $sum = 0;
    while ($num > 0) {
        $digit = $num % 10;   // get last digit
        $sum += $digit;       // add to sum
        $num = (int)($num / 10); // remove last digit
    }
    return $sum;
}

// Example usage
$number = 12345;
echo "The sum of digits of $number is: " . sumOfDigits($number);
?>

output:
The sum of digits of 12345 is: 15




16. Write a PHP function that takes two numbers as input and returns the sum of those
numbers. Display the result on the webpage, when a button is clicked.

<?php
// PHP function to add two numbers
function addNumbers($num1, $num2) {
    return $num1 + $num2;
}

// Initialize result
$result = "";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $n1 = $_POST['num1'];
    $n2 = $_POST['num2'];
    $result = "The sum of $n1 and $n2 is: " . addNumbers($n1, $n2);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Two Numbers</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }
        form {
            max-width: 300px;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background: #f9f9f9;
        }
        input, button {
            margin-top: 10px;
            padding: 8px;
            width: 100%;
        }
        .result {
            margin-top: 15px;
            padding: 10px;
            background: #e6ffe6;
            border: 1px solid #5cb85c;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<h2>Add Two Numbers</h2>

<form method="post">
    <label>Enter first number:</label>
    <input type="number" name="num1" required>

    <label>Enter second number:</label>
    <input type="number" name="num2" required>

    <button type="submit">Calculate Sum</button>
</form>

<?php if ($result != ""): ?>
    <div class="result"><?php echo $result; ?></div>
<?php endif; ?>

</body>
</html>


17. Examine the various control structures in php and construct a bank transaction problem
with customers deposit and withdrawal of amount.

<?php
// Initial balance
$balance = 1000;

// Function to deposit money
function deposit($amount, $balance) {
    if ($amount > 0) {
        $balance += $amount;
        echo "Deposited: $amount <br>";
    } else {
        echo "Invalid deposit amount.<br>";
    }
    return $balance;
}

// Function to withdraw money
function withdraw($amount, $balance) {
    if ($amount > 0) {
        if ($amount <= $balance) {
            $balance -= $amount;
            echo "Withdrawn: $amount <br>";
        } else {
            echo "Insufficient balance.<br>";
        }
    } else {
        echo "Invalid withdrawal amount.<br>";
    }
    return $balance;
}

// Example transactions
echo "<h2>Bank Transactions</h2>";
echo "Initial Balance: $balance <br><br>";

// Deposit 500
$balance = deposit(500, $balance);
echo "Balance after deposit: $balance <br><br>";

// Withdraw 300
$balance = withdraw(300, $balance);
echo "Balance after withdrawal: $balance <br><br>";

// Withdraw 2000 (more than balance)
$balance = withdraw(2000, $balance);
echo "Final Balance: $balance <br>";
?>

output:
Bank Transactions
Initial Balance: 1000

Deposited: 500
Balance after deposit: 1500

Withdrawn: 300
Balance after withdrawal: 1200

Insufficient balance.
Final Balance: 1200


18. IsSet() function in PHP with example.


<?php
$a = 10;
$b = "Hello";

if (isset($a, $b)) {
    echo "Both variables are set.";
} else {
    echo "At least one variable is not set.";
}
?>


output:
Both variables are set.


19. Examine a PHP function that accepts an array of numbers and returns the highest and
lowest values in that array. Display the results on the webpage.


<?php
// Function to get highest and lowest values
function findHighLow($numbers) {
    $highest = max($numbers);
    $lowest = min($numbers);

    return array("highest" => $highest, "lowest" => $lowest);
}

// Example array
$nums = array(45, 12, 78, 34, 99, 23, 5);

// Call function
$result = findHighLow($nums);

// Display results
echo "<h2>Array Values:</h2>";
echo implode(", ", $nums) . "<br><br>";

echo "<h3>Results:</h3>";
echo "Highest Value: " . $result['highest'] . "<br>";
echo "Lowest Value: " . $result['lowest'] . "<br>";
?>


output:
Array Values:
45, 12, 78, 34, 99, 23, 5

Results:
Highest Value: 99
Lowest Value: 5


20.Implement a contact form with validation to ensure all fields are filled out before
submission.


<?php
// Initialize variables
$name = $email = $message = "";
$error = "";
$success = "";

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (empty($_POST["name"]) || empty($_POST["email"]) || empty($_POST["message"])) {
        $error = "‚ö†Ô∏è All fields are required.";
    } else {
        $name = htmlspecialchars($_POST["name"]);
        $email = htmlspecialchars($_POST["email"]);
        $message = htmlspecialchars($_POST["message"]);

        $success = "‚úÖ Thank you, $name! Your message has been received.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Contact Form with Validation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }
        form {
            max-width: 400px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background: #f9f9f9;
        }
        label {
            display: block;
            margin-top: 10px;
        }
        input, textarea, button {
            width: 100%;
            padding: 10px;
            margin-top: 6px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        button {
            background: teal;
            color: white;
            font-size: 16px;
            cursor: pointer;
            margin-top: 15px;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
        .success {
            color: green;
            margin-top: 10px;
        }
    </style>
</head>
<body>

<h2>Contact Us</h2>

<form method="post" action="">
    <label for="name">Name:</label>
    <input type="text" name="name" value="<?php echo $name; ?>">

    <label for="email">Email:</label>
    <input type="email" name="email" value="<?php echo $email; ?>">

    <label for="message">Message:</label>
    <textarea name="message" rows="4"><?php echo $message; ?></textarea>

    <button type="submit">Send</button>
</form>

<?php if ($error): ?>
    <div class="error"><?php echo $error; ?></div>
<?php endif; ?>

<?php if ($success): ?>
    <div class="success"><?php echo $success; ?></div>
<?php endif; ?>

</body>
</html>


21.Construct a PHP function that checks if a given year is a leap year and returns true or
false accordingly.


<?php
// Function to check leap year
function isLeapYear($year) {
    if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {
        return true;
    } else {
        return false;
    }
}

// Example usage
$year = 2024;

if (isLeapYear($year)) {
    echo "$year is a Leap Year.";
} else {
    echo "$year is NOT a Leap Year.";
}
?>

output:

2024 is a Leap Year

22. Create a PHP script that counts the number of occurrences of a specific word in a given
string.

<?php
// Function to count occurrences of a word
function countWordOccurrences($string, $word) {
    // Convert both to lowercase for case-insensitive search
    $string = strtolower($string);
    $word = strtolower($word);

    // Split string into words
    $wordsArray = str_word_count($string, 1);

    // Count occurrences
    $count = 0;
    foreach ($wordsArray as $w) {
        if ($w === $word) {
            $count++;
        }
    }

    return $count;
}

// Example usage
$text = "PHP is a popular scripting language. PHP is used for web development. I love PHP!";
$searchWord = "PHP";

echo "The word '$searchWord' occurs " . countWordOccurrences($text, $searchWord) . " times in the given string.";
?>


output:
The word 'PHP' occurs 3 times in the given string.


23.Prioritize the use of GET and POST arguments in PHP with a real time example.


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Simple check (in real apps, use DB + hashing)
    if ($username == "user1" && $password == "1234") {
        header("Location: balance.php?user=" . urlencode($username));
        exit();
    } else {
        echo "‚ùå Invalid login details.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Bank Login</title>
</head>
<body>
    <h2>Bank Login</h2>
    <form method="post">
        <label>Username:</label><br>
        <input type="text" name="username" required><br><br>

        <label>Password:</label><br>
        <input type="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
// Retrieve username using GET
if (isset($_GET['user'])) {
    $user = $_GET['user'];
    echo "<h2>Welcome, $user!</h2>";
    echo "Your current balance is: ‚Çπ50,000";
} else {
    echo "‚ö†Ô∏è No user specified.";
}
?>


24. Write a PHP script to manipulate the strings with all the string functions.


<?php
// Sample string
$str = "  Hello, PHP World!  ";
$anotherStr = "PHP is amazing.";

// 1. strlen() - Length of string
echo "1. Length of string: " . strlen($str) . "<br>";

// 2. trim() - Remove whitespace from start and end
echo "2. Trimmed string: '" . trim($str) . "'<br>";

// 3. strtoupper() - Convert to uppercase
echo "3. Uppercase: " . strtoupper($str) . "<br>";

// 4. strtolower() - Convert to lowercase
echo "4. Lowercase: " . strtolower($str) . "<br>";

// 5. strpos() - Position of substring
$pos = strpos($str, "PHP");
echo "5. Position of 'PHP': " . $pos . "<br>";

// 6. str_replace() - Replace substring
echo "6. Replace 'World' with 'Everyone': " . str_replace("World", "Everyone", $str) . "<br>";

// 7. substr() - Extract substring
echo "7. Substring (7, 3): " . substr($str, 7, 3) . "<br>";

// 8. strcmp() - Compare strings
$compare = strcmp("Apple", "apple");
echo "8. Compare 'Apple' and 'apple': " . $compare . "<br>";

// 9. explode() - Convert string to array
$arr = explode(" ", $anotherStr);
echo "9. Explode string: ";
print_r($arr);
echo "<br>";

// 10. implode() - Join array to string
$newStr = implode("-", $arr);
echo "10. Implode array: " . $newStr . "<br>";

// 11. strrev() - Reverse string
echo "11. Reverse string: " . strrev($str) . "<br>";

// 12. ucwords() - Capitalize first letter of each word
echo "12. Capitalize Words: " . ucwords(strtolower($str)) . "<br>";

// 13. substr_count() - Count occurrences of substring
echo "13. Count 'PHP' in string: " . substr_count($str, "PHP") . "<br>";

// 14. str_pad() - Pad string
echo "14. Padded string: '" . str_pad("PHP", 10, "*") . "'<br>";

// 15. ltrim() / rtrim() - Trim left/right
echo "15. Left trimmed: '" . ltrim($str) . "'<br>";
echo "15. Right trimmed: '" . rtrim($str) . "'<br>";

// 16. htmlspecialchars() - Convert special chars to HTML entities
$htmlStr = "<b>Bold Text</b>";
echo "16. HTML Special Chars: " . htmlspecialchars($htmlStr) . "<br>";

// 17. ucfirst() - Capitalize first character
echo "17. ucfirst: " . ucfirst(strtolower($str)) . "<br>";

// 18. wordwrap() - Wrap long strings
$longStr = "PHP is a popular server-side scripting language used for web development.";
echo "18. Wordwrap:<br>" . wordwrap($longStr, 20, "<br>") . "<br>";

// 19. addslashes() / stripslashes()
$quoteStr = "It's a PHP string.";
$escaped = addslashes($quoteStr);
echo "19. Escaped string: " . $escaped . "<br>";
echo "19. Unescaped string: " . stripslashes($escaped) . "<br>";

// 20. number_format() - Format number as string
$number = 1234567.89;
echo "20. Formatted number: " . number_format($number) . "<br>";
?>



25.Construct a PHP script to replace the first ‚Äòthe‚Äô of the following string with ‚Äòbest‚Äô. Data:
‚ÄúThe Thing will come to you soon‚Äù


<?php
// Original string
$str = "The Thing will come to you soon";

// Replace first occurrence of 'the' with 'best' (case-insensitive)
$newStr = preg_replace('/\bthe\b/i', 'best', $str, 1);

// Display the result
echo "Original String: $str<br>";
echo "Modified String: $newStr";
?>


output:
Original String: The Thing will come to you soon
Modified String: best Thing will come to you soon



26. Construct a php program to create a chess board in PHP using the ‚ÄúFor‚Äù loop.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PHP Chess Board</title>
    <style>
        table {
            border-collapse: collapse;
            margin: 20px 0;
        }
        td {
            width: 50px;
            height: 50px;
        }
        .black {
            background-color: black;
        }
        .white {
            background-color: white;
        }
    </style>
</head>
<body>

<h2>Chess Board in PHP</h2>

<table>
<?php
$size = 8; // 8x8 chessboard

for ($row = 1; $row <= $size; $row++) {
    echo "<tr>";
    for ($col = 1; $col <= $size; $col++) {
        // If row+col is even, color white; else black
        $color = (($row + $col) % 2 == 0) ? "white" : "black";
        echo "<td class='$color'></td>";
    }
    echo "</tr>";
}
?>
</table>

</body>
</html>

27.Articulate the mathematical operators with suitable examples in PHP.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PHP Mathematical Operators Example</title>
</head>
<body>
    <h2>PHP Mathematical Operators Example</h2>

    <?php
    $a = 10;
    $b = 3;

    echo "<h3>1. Arithmetic Operators</h3>";
    echo "Addition: " . ($a + $b) . "<br>";        // 13
    echo "Subtraction: " . ($a - $b) . "<br>";     // 7
    echo "Multiplication: " . ($a * $b) . "<br>";  // 30
    echo "Division: " . ($a / $b) . "<br>";        // 3.3333
    echo "Modulus: " . ($a % $b) . "<br>";         // 1
    echo "Exponentiation: " . ($a ** $b) . "<br>"; // 1000

    echo "<h3>2. Assignment Operators</h3>";
    $c = 5;
    $c += 3; // 8
    echo "After += 3: $c<br>";
    $c *= 2; // 16
    echo "After *= 2: $c<br>";

    echo "<h3>3. Increment / Decrement Operators</h3>";
    $d = 5;
    echo "Pre-increment: " . (++$d) . "<br>"; // 6
    echo "Post-increment: " . ($d++) . "<br>"; // 6 then $d=7
    echo "After Post-increment: $d<br>"; // 7
    echo "Pre-decrement: " . (--$d) . "<br>"; // 6
    echo "Post-decrement: " . ($d--) . "<br>"; // 6 then $d=5
    echo "After Post-decrement: $d<br>"; // 5

    echo "<h3>4. Comparison Operators</h3>";
    $x = 10;
    $y = 7;
    echo "$x == $y : " . ($x == $y ? 'True' : 'False') . "<br>";
    echo "$x != $y : " . ($x != $y ? 'True' : 'False') . "<br>";
    echo "$x > $y : " . ($x > $y ? 'True' : 'False') . "<br>";
    echo "$x < $y : " . ($x < $y ? 'True' : 'False') . "<br>";
    echo "$x >= $y : " . ($x >= $y ? 'True' : 'False') . "<br>";
    echo "$x <= $y : " . ($x <= $y ? 'True' : 'False') . "<br>";
    ?>
</body>
</html>




























